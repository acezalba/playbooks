---
- name: Create a laravel local development install
  ansible.builtin.command: >
    composer create-project laravel/laravel {{ project_path.path }}

- name: Let tasks know that laravel is used in the project
  ansible.builtin.set_fact:
    laravel_in_project: true

# Search and replace env values
- name: Replace DB_CONNECTION
  when: not_sqlite
  lineinfile:
    path: "{{ project_path.path }}/.env"
    regexp: '^(#?\s*)DB_CONNECTION='
    line: 'DB_CONNECTION={{ db_connection }}'

- name: Replace DB_HOST
  when: not_sqlite
  lineinfile:
    path: "{{ project_path.path }}/.env"
    regexp: '^(#?\s*)DB_HOST='
    line: 'DB_HOST={{ db_host }}'

- name: Replace DB_PORT
  when: not_sqlite
  lineinfile:
    path: "{{ project_path.path }}/.env"
    regexp: '(#?\s*)DB_PORT='
    line: 'DB_PORT={{ db_port }}'

- name: Replace DB_DATABASE
  when: not_sqlite
  lineinfile:
    path: "{{ project_path.path }}/.env"
    regexp: '(#?\s*)DB_DATABASE='
    line: 'DB_DATABASE={{ db_name }}'

- name: Replace DB_USERNAME
  when: not_sqlite
  lineinfile:
    path: "{{ project_path.path }}/.env"
    regexp: '(#?\s*)DB_USERNAME='
    line: 'DB_USERNAME={{ db_user }}'

- name: Replace DB_PASSWORD
  when: not_sqlite
  lineinfile:
    path: "{{ project_path.path }}/.env"
    regexp: '(#?\s*)DB_PASSWORD='
    line: 'DB_PASSWORD={{ db_password }}'

- name: Replace APP_NAME
  lineinfile:
    path: "{{ project_path.path }}/.env"
    regexp: '^APP_NAME='
    line: 'APP_NAME={{ project_name_cleaned }}'

- name: Replace APP_URL
  lineinfile:
    path: "{{ project_path.path }}/.env"
    regexp: '^APP_URL='
    line: 'APP_URL={{ project_url }}'

# For laravel breeze
- name: Require laravel:breeze for project
  ansible.builtin.command: >
    composer require laravel/breeze --dev
  when: require_breeze
  args:
    chdir: "{{ project_path.path }}"

- name: Setup Laravel Breeze
  ansible.builtin.command: >
    php artisan breeze:install {{ breeze_ui | default('blade') }}
  when: require_breeze
  args:
    chdir: "{{ project_path.path }}"

- name: Enable vite-related tasks
  when: require_breeze
  ansible.builtin.set_fact:
    vite_enabled: true

- name: Run npm in your project folder
  ansible.builtin.command: >
    npm install
  when: require_breeze
  args:
    chdir: "{{ project_path.path }}"

- name: Transfer provider config
  ansible.builtin.template:
    src: templates/AppServiceProvider.php.j2
    dest: "{{ project_path.path }}/app/Providers/AppServiceProvider.php"

- name: Transfer app config
  ansible.builtin.template:
    src: templates/app.php.j2
    dest: "{{ project_path.path }}/config/app.php"

- name: Generate your app key
  ansible.builtin.command: php artisan key:generate --show
  args:
    chdir: "{{ project_path.path }}"
  register: app_key_command
  changed_when: app_key_command.rc == 0

- name: store your app_key for use
  ansible.builtin.set_fact:
    app_key: "{{ app_key_command.stdout }}"

- name: Replace APP_KEY
  lineinfile:
    path: "{{ project_path.path }}/.env"
    regexp: '^APP_KEY='
    line: 'APP_KEY={{ app_key }}'

- name: Migrate breeze auth scaffolding
  when: require_breeze
  ansible.builtin.command: >
    php artisan migrate
  args:
    chdir: "{{ project_path.path }}"
